# Compiler to use
CC = gcc

# Compiler flags
CFLAGS = -Wall -Wextra -g

# Directories
SRC_DIR = ./code_review
OBJ_DIR = ./obj
BIN_DIR = ./bin

# Source files and corresponding object files
SRC_FILES = $(wildcard $(SRC_DIR)/*.c)
OBJ_FILES = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRC_FILES))

# Name of the compiled binary
BIN_NAME = program

# Specify phony targets (targets that are not files)
.PHONY: all clean

# Default target
all: $(BIN_DIR)/$(BIN_NAME)

# Compile the final binary from object files
$(BIN_DIR)/$(BIN_NAME): $(OBJ_FILES) | $(BIN_DIR)
	$(CC) $(CFLAGS) -o $@ $(OBJ_FILES)

# Compile each source file into an object file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c | $(OBJ_DIR)
	$(CC) $(CFLAGS) -c -o $@ $<

# Create the object directory if it doesn't exist
$(OBJ_DIR):
	mkdir -p $@

# Create the binary directory if it doesn't exist
$(BIN_DIR):
	mkdir -p $@

# Clean up object and binary directories
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)

