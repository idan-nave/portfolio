Checking out and building Chromium on Linux
https://chromium.googlesource.com/chromium/src/+/main/docs/linux/build_instructions.md

ChromeDriver - WebDriver for Chrome
https://sites.google.com/chromium.org/driver/getting-started

https://sites.google.com/chromium.org/driver/downloads
ChromeDriver 114.0.5735.90
Supports Chrome version 114

Setup

ChromeDriver is a separate executable that Selenium WebDriver uses to control Chrome. It is maintained by the Chromium team with help from WebDriver contributors. If you are unfamiliar with Selenium WebDriver, you should check out the Selenium site.

Follow these steps to setup your tests for running with ChromeDriver:

    Ensure Chromium/Google Chrome is installed in a recognized location

ChromeDriver expects you to have Chrome installed in the default location for your platform. You can also force ChromeDriver to use a custom location by setting a special capability.

    Download the ChromeDriver binary for your platform under the downloads section of this site

    Help WebDriver find the downloaded ChromeDriver executable

Any of these steps should do the trick:

        include the ChromeDriver location in your PATH environment variable

        (Java only) specify its location via the webdriver.chrome.driver system property (see sample below)

        (Python only) include the path to ChromeDriver when instantiating webdriver.Chrome (see sample below)

Sample test

Python:

	import time

	from selenium import webdriver


	driver = webdriver.Chrome('/path/to/chromedriver')  # Optional argument, if not specified will search path.

	driver.get('http://www.google.com/');

	time.sleep(5) # Let the user actually see something!

	search_box = driver.find_element_by_name('q')

	search_box.send_keys('ChromeDriver')

	search_box.submit()

	time.sleep(5) # Let the user actually see something!

	driver.quit()


Controlling ChromeDriver's lifetime

The ChromeDriver class starts the ChromeDriver server process at creation and terminates it when quit is called. This can waste a significant amount of time for large test suites where a ChromeDriver instance is created per test. There are two options to remedy this:

1. Use the ChromeDriverService. This is available for most languages and allows you to start/stop the ChromeDriver server yourself.

Python:

	import time

	from selenium import webdriver

	from selenium.webdriver.chrome.service import Service

	service = Service('/path/to/chromedriver')

	service.start()

	driver = webdriver.Remote(service.service_url)

	driver.get('http://www.google.com/');

	time.sleep(5) # Let the user actually see something!

	driver.quit()

2. Start the ChromeDriver server separately before running your tests, and connect to it using the Remote WebDriver.

Terminal:

	$ ./chromedriver

	Starting ChromeDriver 76.0.3809.68 (...) on port 9515

	...